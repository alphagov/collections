@import "govuk_publishing_components/individual_component_support";

// This isn't proper BEM - but the convention is to have the view name as the
// block part of the class name. Because we need to keep `browse` so this can
// be run as an A/B test, we need to use a different class name for each view.
.browse__breadcrumb-wrapper,
.browse__header-wrapper {
  background-color: $govuk-blue-tint-80;
}

.browse__breadcrumb-wrapper {
  // Setting the overflow to auto is required to prevent the breadcrumb
  // component's margin from collapsing.
  overflow: auto;
}

// The header spacings are a work in progress.
.browse__header-wrapper {
  padding-bottom: govuk-spacing(7);

  @include govuk-media-query($from: "tablet") {
    padding-bottom: govuk-spacing(8);
    padding-top: govuk-spacing(6);
  }
}

.browse__section {
  margin-bottom: govuk-spacing(9);

  @include govuk-media-query($from: "tablet") {
    &:last-child {
      margin-bottom: 0;
    }
  }
}

.browse__section--top-border {
  border-top: 1px solid $govuk-border-colour;
  padding-top: govuk-spacing(3);
}

// We usually avoid using external selectors to style their children.
// However, `govuk_list > li` overrides any custom spacing class on the `li` due to specificity.
// We cannot use the Design System overrides here as we want the spacing to stay the same on mobile.
.browse__list > .browse__list-item {
  margin-bottom: govuk-spacing(5);
}

.browse__more-on-this-topic {
  margin-top: govuk-spacing(4);

  @include govuk-media-query($from: "tablet") {
    margin-top: govuk-spacing(7);
    margin-bottom: govuk-spacing(1);
  }
}

.browse__action-links {
  border-bottom: 4px solid govuk-colour("blue");
  margin-bottom: govuk-spacing(4);

  @include govuk-media-query($from: "tablet") {
    margin-bottom: govuk-spacing(6);
  }
}
